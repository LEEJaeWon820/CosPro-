#include <stdio.h>
#include <stdlib.h>

int main()
{
   int num1 = 20;
   int* numPtr1;

   numPtr1 = &num1;

   int* numPtr2;

   numPtr2 = (int*)malloc(sizeof(int)); // int의 크기 4바이트만큼 동적 메모리 할당

   printf("%p\n", numPtr1);  // 변수 num1의 메모리 주소 출력
													   // 컴퓨터마다, 실행할 때마다 달라짐
   
   printf("%p\n", numPtr1);  // 변수 num1의 메모리 주소 출력
													   // 컴퓨터마다, 실행할 때마다 달라짐

   free(numPtr2);  // 동적으로 할당한 메모리 해제

   return 0;
}

//////////////////////////////////////////////////////

#include <stdio.h>
#include <stdlib.h>    // malloc, free 함수가 선언된 헤더 파일

int main()
{
    int* numPtr;    // int형 포인터 선언

    numPtr = (int *)malloc(sizeof(int));    // int의 크기 4바이트만큼 동적 메모리 할당

    *numPtr = 10;   // 포인터를 역참조한 뒤 값 할당

    printf("%d\n", *numPtr);    // 10: 포인터를 역참조하여 메모리에 저장된 값 출력

    free(numPtr);    // 동적 메모리 해제

    return 0;
}

///////////////////////////////////////////////////////////

#include <stdio.h>
#include <malloc.h>

int main()
{
	int* arr;
	int size;
	int i;

	printf("배열의 크기 입력: ");
	scanf_s("%d", &size);

	arr = (int*)malloc(sizeof(int) * size);

	printf("값 입력\n");

	for (i = 0; i < size; i++)
	{
		printf("arr[%d]: ", i);
		scanf_s("%d", &arr[i]);
	}

	printf("입력한 배열의 값 출력\n");

	for (i = 0; i < size; i++)
	{
		printf("arr[%d]: %d\n", i, arr[i]);
	}
	
	return 0;
}
